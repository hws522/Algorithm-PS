/**
 문제
해빈이는 패션에 매우 민감해서 한번 입었던 옷들의 조합을 절대 다시 입지 않는다. 
예를 들어 오늘 해빈이가 안경, 코트, 상의, 신발을 입었다면, 다음날은 바지를 추가로 입거나 안경대신 렌즈를 착용하거나 해야한다. 
해빈이가 가진 의상들이 주어졌을때 과연 해빈이는 알몸이 아닌 상태로 며칠동안 밖에 돌아다닐 수 있을까?

입력
첫째 줄에 테스트 케이스가 주어진다. 테스트 케이스는 최대 100이다.

각 테스트 케이스의 첫째 줄에는 해빈이가 가진 의상의 수 n(0 ≤ n ≤ 30)이 주어진다.
다음 n개에는 해빈이가 가진 의상의 이름과 의상의 종류가 공백으로 구분되어 주어진다. 같은 종류의 의상은 하나만 입을 수 있다.
모든 문자열은 1이상 20이하의 알파벳 소문자로 이루어져있으며 같은 이름을 가진 의상은 존재하지 않는다.

출력
각 테스트 케이스에 대해 해빈이가 알몸이 아닌 상태로 의상을 입을 수 있는 경우를 출력하시오.
 */

// 전처리
const [n, ...arr] = require("fs")
    .readFileSync("./input.txt")
    .toString()
    .trim()
    .split("\n");
// input을 map을 사용할 수 있도록 array 형태로 만듦
let clothes = [];
// arr의 첫 값은 숫자기 때문에 count++를 해도 0부터 들어가도록 초기값을 -1로 초기화 함
let count = -1;
// 1을 곱했을 때 값이 NaN이라면 옷이 담겼기 때문에 공백에 따라 split해준다
for (let i = 0; i < arr.length; i++) {
    if (isNaN(arr[i] * 1)) {
        clothes[count].push(arr[i].split(" ")); // 숫자가 아닐 때
    }
    else {
        // 만약 1을 곱한 값이 숫자라면 배열을 push하고 count에 1을 더한다
        clothes.push([]);
        count++;
    }
}
// 코드 풀이
for (let i of clothes) {
    const arr = i;
    // 해시 테이블을 만들기 위해 Map을 이용함
    let key = new Map();
    for (let j = 0; j < arr.length; j++) {
        // 위 전처리의 결과를 보면 배열의 두 번째 값이 옷의 장르임을 알 수 있음
        // 만약 key에 해당 장르가 존재하지 않는다면 1을 넣어줌
        !key.has(arr[j][1])
            ? key.set(arr[j][1], 1)
            // 만약 key에 해당 장르가 이미 존재한다면 값을 가져와 +1을 해줌
            : key.set(arr[j][1], key.get(arr[j][1]) + 1);
    }
    let answer = 1;
    // map의 결과는 오브젝트 형식으로 나온다
    for (let a of key.values()) {
        // a에 +1을 해서 곱하는 이유:
        // 예를들어 헤드웨어 종류가 2가지라면 1번 모자, 2번 모자, 그리고 아무것도 안 쓴 경우를 포함해야 해서
        answer *= a + 1;
    }
    // -1을 해준 이유: 모두 아무것도 입지 않을 경우를 빼줌
    console.log(answer - 1);
}
